// <auto-generated />
using System;
using C4.NorthWind.BlazingPizza.DataContexts.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C4.NorthWind.BlazingPizza.DataContexts.Migrations
{
    [DbContext(typeof(BlazingPizzaContext))]
    partial class BlazingPizzaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.GetToppings.Repositories.Entities.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.HasKey("Id");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Queso extra",
                            Price = 23.5
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tocino de pavo",
                            Price = 28.800000000000001
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tocino de jabalí",
                            Price = 28.800000000000001
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tocino de ternera",
                            Price = 28.800000000000001
                        },
                        new
                        {
                            Id = 5,
                            Name = "Té y bollos",
                            Price = 47.0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bollos recién horneados",
                            Price = 43.5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Pimiento",
                            Price = 9.0
                        },
                        new
                        {
                            Id = 8,
                            Name = "Cebolla",
                            Price = 9.0
                        },
                        new
                        {
                            Id = 9,
                            Name = "Champiñones",
                            Price = 9.0
                        },
                        new
                        {
                            Id = 10,
                            Name = "Pepperoni",
                            Price = 9.0
                        },
                        new
                        {
                            Id = 11,
                            Name = "Salchicha de pato",
                            Price = 30.800000000000001
                        },
                        new
                        {
                            Id = 12,
                            Name = "Albóndigas de venado",
                            Price = 24.5
                        },
                        new
                        {
                            Id = 13,
                            Name = "Cubierta de langosta",
                            Price = 612.5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Caviar de esturión",
                            Price = 965.25
                        },
                        new
                        {
                            Id = 15,
                            Name = "Corazones de alcachofa",
                            Price = 32.600000000000001
                        },
                        new
                        {
                            Id = 16,
                            Name = "Tomates frescos",
                            Price = 19.0
                        },
                        new
                        {
                            Id = 17,
                            Name = "Albahaca",
                            Price = 19.0
                        },
                        new
                        {
                            Id = 18,
                            Name = "Filete",
                            Price = 80.5
                        },
                        new
                        {
                            Id = 19,
                            Name = "Pimientos picantes",
                            Price = 39.799999999999997
                        },
                        new
                        {
                            Id = 20,
                            Name = "Pollo búfalo",
                            Price = 48.0
                        },
                        new
                        {
                            Id = 21,
                            Name = "Queso azul",
                            Price = 24.5
                        });
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.CustomPizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaSpecialId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("CustomPizzas");
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.CustomPizzaTopping", b =>
                {
                    b.Property<int>("CustomPizzaId")
                        .HasColumnType("int");

                    b.Property<int>("ToppingId")
                        .HasColumnType("int");

                    b.HasKey("CustomPizzaId", "ToppingId");

                    b.ToTable("CustomPizzaTopping");
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryAddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.CustomPizza", b =>
                {
                    b.HasOne("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.Order", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.CustomPizzaTopping", b =>
                {
                    b.HasOne("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.CustomPizza", null)
                        .WithMany("Toppings")
                        .HasForeignKey("CustomPizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.Order", b =>
                {
                    b.HasOne("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId");

                    b.Navigation("DeliveryAddress");
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.CustomPizza", b =>
                {
                    b.Navigation("Toppings");
                });

            modelBuilder.Entity("C3.NorthWind.BlazingPizza.PlaceOrder.Repositories.Entities.Order", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
